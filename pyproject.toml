[tool.poetry]
name = "staff-plus-genai-interviews"
version = "0.1.0"
description = "The staff-plus engineering interviews material"
authors = ["fvaleye"]
license = "Apache Licence 2.0"
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.10"
langchain = "^0.2.12"
openai = "^1.39.0"
google-auth = "^2.32.0"
requests = "^2.32.3"

[tool.poetry.dev-dependencies]
ruff = "^0.5.6"
pytest = "^7.4.0"
pre-commit = "^4.0.1"

[tool.poetry.scripts]
staff-plus-genai-interviews = "src.main:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest]
pythonpath = "src"


[tool.ruff]
fix = true
line-length = 120
target-version = "py312"

[tool.ruff.lint]
fixable = ["I"]
ignore = [
    "A003", # line too long (already checked by black)
]
select = [
    "YTT", # flake8-2020
    "B", # flake8-bugbear
    "A", # flake8-builtins
    "C4", # flake8-comprehensions
    "T10", # flake8-debugger
    "INP", # flake8-no-pep420
    "T20", # flake8-print
    "PT", # flake8-pytest-style
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "I", # isort
    "C90", # mccabe
    "E", # pycodestyle
    "W", # pycodestyle
    "F", # pyflakes
    "PGH", # pygrep-hooks
    "RUF", # ruff
]

[tool.ruff.lint.isort]
force-single-line = true
lines-between-types = 1
section-order = ["future", "standard-library", "first-party", "third-party", "local-folder"]
